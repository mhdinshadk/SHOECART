<%-include('../users/layouts/header.ejs') %>
<%-include('../users/layouts/navBar.ejs') %>
<div class="hero">
    <div class="container">
        <div class="row justify-content-between">
            <div class="col-lg-5">
                <div class="intro-excerpt">
                    <h1>Checkout</h1>
                </div>
            </div>
            <div class="col-lg-7"></div>
        </div>
    </div>
</div>
</div>
<!-- End Hero Section -->

<div class="untree_co-section">
    <div class="container">
        <div class="row mb-5">
            <div class="col-md-12">
	  <!-- <div class="border p-4 rounded" role="alert">
		Returning customer? <a href="#">Click here</a> to login
	  </div> -->
	</div>
  </div>
  <div class="row">
	<div class="col-md-6 mb-5 mb-md-0">
		<h2 class="h3 mb-3 text-black">Billing Address</h2>
		<div class="p-3 p-lg-5 border bg-white">
			<div class="col-lg-9 cart-item-box">
				<h5 class="text-dark mb-3">1. &nbsp; Select a delivery address</h5>
				<% if(address.length !== 0){ %>
				<form action="/checkout" method="post" id="addressForm">
					<% address.forEach((addr, index) => { %>
					<label class="p-3 border rounded-4 m-2 custom-label">
						<div class="form-check d-flex align-items-center mx-4">
							<input class="form-check-input" type="radio" value="<%= addr._id %>"
								name="address" id="Radio<%= addr._id %>"
								<% if(index === address.length - 1){ %> checked <% } %>>
							<div class="mx-5">
								<p class="text-dark"><b><%= addr.fullName %><br></b> Location: <%= addr.city %>,
									<%= addr.district %>, <%= addr.state %><br>
									<b style="color: #043a6c;">
										<span class="material-symbols-outlined"
											style="font-size: 13px;">Mobile:</span> <%= addr.mobile %>
									</b>
								</p>
								<p>Pincode: <%= addr.pincode %></p>
							</div>
						</div>
					</label>
					<% }); %>
				</form>
				<% } else { %>
					<div class="text-center w-100 card">
						<h6 class="mt-2">You have no shipping Address</h6>
						<p class="">Kindly add a shipping address to proceed.</p>
						<button type="button" class="btn btn-outline-primary-2 mx-auto mt-1 " data-bs-toggle="modal"
							data-bs-target="#exampleModal"
							style="border-radius: 0px; font-size: 13px; width: 30rem;"> + Add a new address
						</button>
					</div>
					<% } %>
					<% if(address.length !== 0){ %>
					<button type="button" class="btn btn-outline-primary-2 mt-3" data-bs-toggle="modal"
						data-bs-target="#exampleModal" style="border-radius: 0px; font-size: 13px;"> + Add a new
						address</button>
					<% } %>
					<hr>
				</div>
			</div>
	  <!-- <button type="button" class="btn btn-primary mt-3" data-toggle="modal" data-target="#exampleModal">
		Add Address +
	  </button> -->
	  
	  <!-- Modal -->
	  <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog"aria-labelledby="exampleModalLabel" aria-hidden="true">
		<div class="modal-dialog" role="document">
		  <div class="modal-content">
			<div class="modal-header">
			  <h5 class="modal-title" id="exampleModalLabel">Address</h5>
			  <!-- <button type="button" class="close" data-dismiss="modal" aria-label="Close">
				<span aria-hidden="true">&times;</span>
			  </button> -->
			</div>
			<div class="modal-body">
				<form action="/addAddress" method="post" onsubmit="return validAddress()">
					<h2 class="checkout-title mb-3">Add Address</h2>
	
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="fullName">Full Name</label>
								<input type="text" class="form-control" id="fullName" name="fullName">
								<p id="name-error" style="color: red;"></p>
							</div>
	
							<div class="form-group">
								<label for="phone">Mobile Number</label>
								<input type="tel" class="form-control" id="phone" name="mobile">
								<p id="mobile-error" style="color: red;"></p>
							</div>
						</div>
	
						<div class="col-md-6">
							<div class="form-group">
								<label for="state">State</label>
								<input type="text" class="form-control" id="state" name="state">
								<p id="state-error" style="color: red;"></p>
							</div>
	
							<div class="form-group">
								<label for="district">District</label>
								<input type="text" class="form-control" id="district" name="district">
								<p id="district-error" style="color: red;"></p>
							</div>
						</div>
					</div>
	
					<div class="row">
						<div class="col-md-6">
							<div class="form-group">
								<label for="city">City</label>
								<input type="text" class="form-control" id="city" name="city">
								<p id="city-error" style="color: red;"></p>
							</div>
						</div>
	
						<div class="col-md-6">
							<div class="form-group">
								<label for="pinCode">Pincode</label>
								<input type="text" class="form-control" id="pinCode" name="pincode">
								<p id="pincode-error" style="color: red;"></p>
							</div>
						</div>
	
						<div class="col-12 text-center mb-3">
							<button type="submit" class="btn btn-dark">Submit</button>
						</div>
					</div>
				</form>
			</div>
			<!-- <div class="modal-footer">
			  <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
			  <button type="submit" class="btn btn-dark">Submit</button>
			</div> -->
		  </div>
		</div>
	  </div>
	</div>
	<!-- Button trigger modal -->

	<div class="col-md-6">

	  <div class="row mb-5">
		<div class="col-md-12">
		  <h2 class="h3 mb-3 text-black">Coupon Code</h2>
		  <div class="p-3 p-lg-5 border bg-white">

			<label for="checkout-discount-input" class="text-black mb-3">Enter your coupon code if you have one</label>
			<div class="input-group w-75 couponcode-wrap">
			  <input type="text" class="form-control me-2"id="couponCodeInput" placeholder="Coupon Code" type="text" name="coupon"
			  placeholder="Coupon Code">
			  <div id="applyCouponBtn"
                        class="flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10"
                        onclick="applyOrRemoveCoupon()">
                        Apply coupon
                      </div>
			</div>

		  </div>
		</div>
	  </div>
	  <!-- <div class="text-center">
		<label for="checkout-discount-input" class="text-truncate text-center">
		  Have a coupon? <br> enter coupon code
		</label>
		<div class="d-flex justify-content-center">
		  <input
			class="text-center stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5 align-items-center"
			id="couponCodeInput" placeholder="Coupon Code" type="text" name="coupon"
			placeholder="Coupon Code">
		</div>
		<div>
		  <div id="applyCouponBtn"
			class="flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10"
			onclick="applyOrRemoveCoupon()">
			Apply coupon
		  </div>
		</div>
	  </div> -->

	  <div class="row mb-5">
		<div class="col-md-12">
		  <h2 class="h3 mb-3 text-black">Your Order</h2>
		  <div class="p-3 p-lg-5 border bg-white">
			<table class="table site-block-order-table mb-5">
			  
				<thead>
					<tr>
					  <th>Product</th>
					  <th>Total</th>
					</tr>
				  </thead>
				  <% products.forEach((value,index)=> { %>

					<tbody>
					  <tr>
						<td>
						  <a>
							<%= value.productId.productName %> (Set: <%= value.quantity %>)
						  </a>
						  <input id="quantity" type="hidden" value="<%= value.quantity %>">
						  <input id="productID" type="hidden" value="<%= value.productId %>">
						</td>
						<td>
						  <% if (value.productId.discountedPrice > 0) { %>
							<%= value.productId.discountedPrice * value.quantity%> 
						   <% } else { %>
						  <%= (value.productId.price) * (value.quantity) %>
						  <% } %>
						</td>
					  </tr>
					  <% }) %>

						<tr class="summary-subtotal">
						  <td>Subtotal:</td>
						  <td >
							<%= total %>
						  </td>
						</tr>

						<!-- End .summary-subtotal -->
						<tr>
						  <td>Shipping:</td>
						  <td>Free shipping</td>
						</tr>
						<tr class="summary-total">
						  <td>Total:</td>

						  <td id="total1">
							
								<%= total %>
						
						
						  </td>
						</tr>
						<!-- End .summary-total -->
					</tbody>
				</table>
                <div class="d-flex align-items-center mt-3">
                    <div class="mr-2">
                      <input required type="radio" id="COD" name="payment" value="COD" />
                    </div>
                    <a href="" class="d-block text-dark" for="pay1">Cash On Delivery</a>
                  </div>

                  <div class="d-flex align-items-center">
                    <div class="mr-2">
                      <input required type="radio" id="payment" name="payment" value="Online Payment" checked />
                    </div>
                    <a href="" class="d-block text-dark" for="pay2">Online Payment</a>
                  </div>

                  <div class="d-flex align-items-center">
                    <div class="mr-2">
                      <input required type="radio" id="wallet" name="payment" value="Wallet" />
                    </div>
                    <a href="" class="d-block text-dark" for="pay3">Wallet</a>
                  </div>

                  <button type="submit" class="btn btn-outline-primary-2 btn-order btn-block mt-2">
					<span class="btn-text">Place Order</span>
				</button>
                </div>
		  </div>
		</div>
	  </div>

	</div>
  </div>
  <!-- </form> -->
</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://checkout.razorpay.com/v1/checkout.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function() {
        // Add event listener to the labels
        document.querySelectorAll(".custom-label").forEach(label => {
            label.addEventListener("click", function () {
                // Remove the "checked" class from all labels
                document.querySelectorAll(".custom-label").forEach(label => {
                    label.classList.remove("checked");
                });
                // Add the "checked" class to the clicked label
                this.classList.add("checked");
            });
        });

        // AJAX request for placing order
        async function placeOrder() {
            const placeOrderBtn = document.querySelector('.btn-order');
            placeOrderBtn.addEventListener('click', async function (event) {
                event.preventDefault();
                try {
                    const addressId = document.querySelector('input[name="address"]:checked').value;
                    const paymentMethod = document.querySelector('input[name="payment"]:checked').value;
                    const totalAmount = document.getElementById("total1").innerHTML;
                    const data = {
                        address: addressId,
                        payment: paymentMethod,
                        amount: totalAmount
                    };
                    const response = await fetch('/placeOrder', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify(data)
                    });
                    if (response.ok) {
                        const responseData = await response.json();
                        // Assuming Swal is already loaded
                        Swal.fire({
                            title: 'Order Placed Successfully',
                            imageUrl: '/static/img/Animation - 1698988378670.gif',
                            imageAlt: 'Custom Image',
                            html: `
                                <p>Thank you for your purchase! Now we're preparing for the shipment!...</p>
                                <a href="/orderDetails" class="btn btn-primary">Order Details</a>
                                <a href="/products" class="btn btn-secondary">Continue Shopping</a> `,
                            didOpen: () => {
                                Swal.showLoading();
                            },
                            width: '30%'
                        });
                    } else if (response.status === 201) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Insufficient Wallet Balance',
                            text: 'Your wallet balance is insufficient. Please choose a different payment method or recharge your wallet.',
                        });
                    } else if (response.status === 202) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Stock Exceeded',
                            text: 'Product stock is less than your order quantity',
                        });
                    } else {
                        const responseData = await response.json();
                        razorPayment(responseData.order);
                    }
                } catch (error) {
                    console.error('There was an error:', error);
                    Swal.fire('An error occurred while placing the order');
                }
            });
        }

        placeOrder(); // Call the function to handle the order placement

        function razorPayment(order) {
            var options = {
                key: '<%=process.env.Razorpaykey_id%>',
                amount: order.amount,
                currency: "INR",
                name: "SHOECART",
                description: "Test Transaction",
                image: "/user/images/icons/",
                order_id: order.id,
                handler: function (response) {
                    verifyPayment(response, order);
                },
                prefill: {
                    name: "M.Inshad",
                    email: "aljamalu.ali@example.com",
                    contact: "9000090000"
                },
                notes: {
                    address: "Razorpay Corporate Office",
                },
                theme: {
                    color: "#3399cc"
                }
            };
            var rzp1 = new Razorpay(options);
            rzp1.open();
        }

        function verifyPayment(payment, order) {
            const amount2 = document.getElementById("total1").innerHTML;
            fetch("/verifyPayment", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    payment,
                    amount2,
                    order
                })
            }).then(response => {
                if (response.ok) {
                    return response.json();
                } else {
                    throw new Error('Network response was not ok');
                }
            }).then(responseData => {
                if (responseData.razorpaySuccess) {
                    Swal.fire({
                        title: 'Order Placed Successfully',
                        imageUrl: '/static/img/Animation - 1698988378670.gif',
                        imageAlt: 'Custom Image',
                        html: `
                            <p>Thank you for your purchase! Now we're preparing for the shipment!...</p>
                            <a href="/orderDetails" class="btn btn-primary">Order Details</a>
                            <a href="/products" class="btn btn-secondary">Continue Shopping</a> `,
                        didOpen: () => {
                            Swal.showLoading();
                        },
                        width: '30%',
                    });
                } else {
                    Swal.fire({
                        position: "center",
                        icon: "error",
                        title: "Payment failed",
                        showConfirmButton: false,
                        timer: 1500,
                    });
                }
            }).catch(error => {
                console.error('There was an error:', error);
                Swal.fire('An error occurred while verifying the payment');
            });
        }
    });
</script>

 <!-- // ======== coupon based script ========== -->
 <script>
	let isCouponApplied = false;

	function applyOrRemoveCoupon() {
	  const couponCodeInput = document.getElementById('couponCodeInput');
	  const applyCouponBtn = document.getElementById('applyCouponBtn');

	  if (isCouponApplied) {
		// Remove coupon logic here
		removeCoupon();
		applyCouponBtn.textContent = 'Apply coupon';
	  } else {
		// Apply coupon logic here
		applyCoupon();
		applyCouponBtn.textContent = 'Remove Coupon';
	  }

	  isCouponApplied = !isCouponApplied;
	}


   // ====== applyig coupon =========
	function applyCoupon() {
	  const couponCode = document.getElementById('couponCodeInput').value;

	  // Get the total value from the UI
	  const totalElement = document.getElementById('total1');
	  const total = parseFloat(totalElement.textContent.trim());

	  // Send a request to apply the coupon
	  fetch('/applyCoupon', {
		method: 'POST',
		headers: {
		  'Content-Type': 'application/json',
		},
		body: JSON.stringify({ couponCode, total }),
	  })
		.then(response => response.json())
		.then(data => {
		  if (data.success) {
			// Coupon applied successfully
			const totalPriceElement = document.getElementById('total1');

			// Update the total price on the UI
			if (data.newTotal !== undefined) {
			  totalPriceElement.textContent = data.newTotal;
			}

			Swal.fire({
			  title: 'Coupon applied successfully!',
			  icon: 'success',
			  timer: 2000,
			});
		  } else {
			Swal.fire({
			  title: data.message,
			  icon: 'error',
			  timer: 2000,
			});
		  }
		})
		.catch(error => {
		  console.error(error);
		  Swal.fire('An error occurred while applying the coupon.');
		});
	}



	// Remove coupon logic here
	function removeCoupon() {
  fetch('/removeCoupon', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
    },
    // Add an empty body since no data is required for removing the coupon
    body: JSON.stringify({}), // Empty body
  })
    .then(response => {
      if (response.ok) {
        // If the response is successful, return the JSON data
        return response.json();
      } else {
        // If the response is not successful, throw an error
        throw new Error('Failed to remove coupon');
      }
    })
    .then(data => {
      if (data.success) {
        const totalPriceElement = document.getElementById('total1');
        totalPriceElement.textContent = data.updatedTotal;
        Swal.fire({
          title: 'Coupon removed successfully!',
          icon: 'success',
          timer: 2000,
        });
      } else {
        Swal.fire({
          title: data.message,
          icon: 'error',
          timer: 2000,
        });
      }
    })
    .catch(error => {
      console.error(error);
      Swal.fire('An error occurred while removing the coupon.');
    });
}
  </script>


<%- include('../users/layouts/footer.ejs') %>