<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SHOECART</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/static/signup.css">
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-md-6 d-none d-md-block hihi pt-4">
                <img class="sizeorImage" src="/static/img/image2.png" alt="">
            </div>
            <div class="col-md-6 col-12 pl-5 hai">
                <div class="signup-form mt-3">
                    <div class="logoimg pb-4">
                        <img class="sizeForImage" src="/static/userAssets/img/logo.png" alt="">
                    </div>
                    <%  if(typeof message !== 'undefined'){ %>
                      <h5 id="invalid-msg" class=" text-danger text-center"><%- message %></h5>
                 <% }  %>
                 <form action="/signup" id="form" method="post" onsubmit="return validRegister()">
                  <div id="error-message" class="text-danger text-center"></div>
                  <div class="input-control mt-3">
                      <input type="text" id="Fname" class="form-control input-with-border" name="firstname" placeholder="First Name">
                      <div id="Fname-error" class="error"></div> <!-- Error message placeholder for first name -->
                  </div>
                  <div class="input-control mt-3">
                    <input type="text" id="Lname" class="form-control input-with-border" name="lastname" placeholder="Last Name">
                    <div id="Lname-error" class="error"></div> <!-- Error message placeholder for last name -->
                </div>
                      <div class="input-control mt-3">
                          <input type="email" id="email" class="form-control input-with-border" name="email" placeholder="Email">
                          <div id="email-error" class="error"></div>
                      </div>
                      <div class="input-control mt-3">
                          <input type="tel" id="mobile" class="form-control input-with-border" name="phonenumber" placeholder="Phone Number">
                          <div id="mobile-error" class="error"></div>
                      </div>
                      
                      <div class="input-control mt-3">
                          <input type="password" id="password" class="form-control input-with-border" name="password" placeholder="Password">
                          <div id="password-error" class="error"></div>
                      </div>
                      <div class="input-control mt-3">
                          <input type="password" id="Cpassword" class="form-control input-with-border" name="confirm_password" placeholder="Confirm Password">
                          <div id="password-mismatch" class="error"></div>
                      </div>
                      <div class="form-group">
                          <button type="submit" class="btn btn-block mt-4 bg-dark buttensignup text-white">Sign Up</button>
                      </div>
                      <p class="text-center text-dark small">Already have an account? <a class="text-dark" href="/login">Login here!</a></p>
                  </form>
                  
                </div>
            </div>
        </div>
    </div>
</body>



</html>
<!-- <script src="/static/userAssets/js/validation.js"></script> -->


<script>
function validRegister() {
    // Retrieve form input values
    const name = document.getElementById('Fname').value.trim();
    const lname = document.getElementById('Lname').value.trim();
    const email = document.getElementById('email').value.trim();
    const mobile = document.getElementById('mobile').value.trim();
    const password = document.getElementById('password').value;
    const cpassword = document.getElementById('Cpassword').value;

    // Clear any previous error messages
    clearErrors();

    // Array to store error messages
    let errors = [];

    // Validate first name
    if (!name) {
        displayError("Fname-error", 'First name field should not be empty!');
        errors.push('Fname');
    }

    // Validate last name
    if (!lname) {
        displayError("Lname-error", 'Last name field should not be empty!');
        errors.push('Lname');
    }

    // Validate email
    const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,4}$/;
    if (!email) {
        displayError("email-error", 'Email field should not be empty!');
        errors.push('email-error');
    } else if (!emailRegex.test(email)) {
        displayError("email-error", 'Please enter a valid email address.');
        errors.push('email-error');
    }

    // Validate mobile number
    const mobileRegex = /^[6-9]\d{9}$/;
    if (!mobile || !mobileRegex.test(mobile)) {
        displayError("mobile-error", 'Mobile number should be a 10-digit valid number.');
        errors.push('mobile-error');
    }

    // Validate password
    const passwordRegex = /^(?=.*[!@#$%^&*]).{6,}$/;
    if (!password || !passwordRegex.test(password)) {
        displayError("password-error", 'Password must be at least 6 characters long and contain a special character.');
        errors.push('password-error');
    }

    // Confirm password
    if (password !== cpassword) {
        displayError("password-mismatch", 'Passwords do not match. Please try again.');
        errors.push('password-mismatch');
    }

    // If there are errors, prevent form submission and focus on the first error field
    if (errors.length > 0) {
        document.getElementById(errors[0]).focus();
        return false;
    }

    return true;
}

function displayError(errorId, errorMessage) {
    const errorElement = document.getElementById(errorId);
    errorElement.textContent = errorMessage;
}

function clearErrors() {
    const errorElements = document.querySelectorAll(".error");
    errorElements.forEach(element => element.textContent = "");
}
</script>




  