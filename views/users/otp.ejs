<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>SHOECART</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/static/login.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
</head>
<body>
    <div class="container">
        <div class="d-flex justify-content-center align-items-center vh-100">
            <div class="col-md-4 col-8 hai p-5">
                <div class="signup-form mt-3">
                    <div class="logoimg pb-4 d-flex justify-content-center align-items-center">
                        <img class="sizeForImage" src="/static/userAssets/img/logo.png" alt="">
                    </div>
                    <h4>OTP Verification</h4>
                    <% if(typeof message !== 'undefined' ){ %>
                        <h5 id="invalid-msg" class="text-danger text-center"><%- message %></h5>
                    <% } %>
                    <form id="otpForm" method="post" action="/otp">
                        <input id="otp" type="number" class="form-control input-with-border" name="otp" placeholder="Enter Your OTP" required="required">
                        <div class="form-group">
                            <center><div class="text-danger"></div></center>
                            <button type="submit" class="btn btn-block mt-4 bg-dark buttensignup text-white">VERIFY</button>
                        </div>
                    </form>                   
                    <p class="text-danger mt-3">Time left: <span id="timer">60</span></p>
                    <button class="btn btn-danger" id="resendButton" onclick="resendOTP(event)">
                        Resend OTP
                    </button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        let countdown = 60;
        let timerElement = document.getElementById('timer');
        let resendButton = document.getElementById('resendButton');
        let countdownInterval;
    
        function updateTimer() {
            timerElement.textContent = countdown + ' seconds';
            countdown--;
    
            if (countdown < 0) {
                clearInterval(countdownInterval);
                timerElement.textContent = '0 seconds';
                resendButton.removeAttribute('disabled');
            }
        }
    
        function resendOTP(event) {
            event.preventDefault();
            countdown = 60;
            timerElement.textContent = countdown + ' seconds';
            resendButton.disabled = true;
            countdownInterval = setInterval(updateTimer, 1000);
    
            // Simulate OTP resend logic here
            // For example, you can make a Fetch API call to send a new OTP
            fetch('/resendOtp', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({}),
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                console.log("Resending OTP...");
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
            });
        }
    
        countdownInterval = setInterval(updateTimer, 1000);
    
        setTimeout(function () {
            // Your code to hide the message after a delay goes here
            var invalidMsg = document.getElementById("invalid-msg");
            if (invalidMsg) {
                invalidMsg.style.display = "none";
            }
        }, 3000);
    
        document.addEventListener('DOMContentLoaded', function () {
            resendButton.addEventListener('click', resendOTP);
        });
    
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelector('form').addEventListener('submit', function (event) {
                event.preventDefault();
                const otp = document.getElementById('otp').value;
    
                // Make a Fetch API request to verify the OTP
                fetch('/otp', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ otp: otp }),
                })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        // OTP verification was successful
                        Swal.fire({
                            title: 'Registered Successfully',
                            text: 'You have successfully verified your OTP and registered.',
                            icon: 'success',
                            timer: 2500,
                            showConfirmButton: false
                        }).then(function () {
                            window.location.href = '/login';
                        });
                    } else {
                        // OTP verification failed
                        Swal.fire({
                            title: 'Error',
                            text: data.message || 'Invalid OTP',
                            icon: 'error',
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        title: 'Error',
                        text: 'An error occurred while processing your request',
                        icon: 'error',
                    });
                });
            });
        });
    </script>
    



</body>
</html>
